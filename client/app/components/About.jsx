/** @flow */
import React, { Component, PropTypes } from 'react'
import { Link } from 'react-router'


class About extends Component {

  constructor (props, context) {
    super(props, context)
    this.state = {}
  }

  render () {
    return (
      <div className="about-page">

        <h3>How does it work?</h3>

        The bugs that this tool displays are generated by the <a target="_blank" href="https://www.oipa.nl">OIPA</a> parser, which parses IATI files of all versions. 

        OIPA has the incentive to parse IATI as strictly as possible, and hence it throws loads of validation errors. 

        <br /><br />
        These validation errors are stored with the dataset and exposed through the /datasets/ endpoint of the <a target="_blank" href="https://www.oipa.nl/api/">OIPA API</a>. 

        This tool is a React (Javascript) app that directly uses that endpoint to display aggregated and detailed error information.

        <h3>The origin of this tool</h3>

        I'm Vincent van 't Westende, a developer at <a target="_blank" href="https://www.zimmermanzimmerman.nl">Zimmerman & Zimmerman</a>. 

        We develop and maintain <a target="_blank" href="https://www.oipa.nl">OIPA</a>, a tool that provides API access to all published IATI files. 
        OIPA serves as data engine for <a target="_blank" href="https://www.iatistudio.com">IATI Studio</a>, <a target="_blank" href="https://devtracker.dfid.gov.uk/">DevTracker</a>, <a target="_blank" href="https://www.openaid.nl">OpenaidNL</a>, <a target="_blank" href="https://aiddata.rvo.nl/">Dutch Enterprise Agency - Aid Data</a>, <a target="_blank" href="http://opendata.unesco.org">UNESCO Open Data</a>, <a target="_blank" href="http://open.unhabitat.org">Open UN-Habitat</a>, <a target="_blank" href="http://www.rainfoundation.org">RAIN Foundation</a> and <a target="_blank" href="http://urbandata.unhabitat.org/">UN-Habitat - Urban data</a>.

        <br /><br />
        I Recently went through the logs of the OIPA parser and found tons of validation errors of which some I coulnd't find on the IATI Dashboard. 
        At the same time these logs are time-consuming to check while an interface would make it far easier.
        So why not make them transparent through the OIPA API and build a dashboard to make publishers aware. 
        This should only have winners; publishers get an extra tool to check correctness of their data, the OIPA parser bugs are spotted earlier through feedback on this tool, and OIPA developers have an easier interface to check parser logs. 

        <h3>Questions</h3>
        
        I have no idea if anyone will use this and if it will cause response, so for now feel free to <a target="_blank" href="https://twitter.com/vwestende">tweet me</a> on anything regarding this dashboard (re-parse request, feature, bugs in a bug dashboard, etc.).

        <br /><br />
        There's a <a target="_blank" href="https://trello.com/b/cAa0ryxh/iati-bugs">Trello board</a> ready for bugs / feature requests.

        <h3>Do I publish 100% correct data when there's 0 bugs listed?</h3>
        
        At the moment this tool only catches a subset of IATI validation bugs. But if you have no bugs on the IATI dashboard and in here, it should good enough for now!
        <br /><br />
        Please keep in mind this is just a first version, built in my own time in the evening hours. That's not quite the perfect setting for a complete and bug free tool. 
        

        <h3>IATI Dashboard</h3>
        Similar functionality as provided by this tool could be added to the IATI dashboard and I hope it will. 
        The reason I kept this separately instead of asking / helping the IATI dashboard to show these errors, is because the entry point of this dashboard is very different and less effort for me. See 'How does it work?' for details. 
        <br /><br />
        In this case I think its also healthy to have 2 tools to do the same thing. It makes it easier to spot bugs in the tools when publishers do cross-checks.

        <h3>Is this important?</h3>

        The <a target="_blank" href="http://dashboard.iatistandard.org/publishing_stats.html">Publisher stats / GPEDC</a> gives great insights to the quality of the data itself, which in the end is way more important than 100% bug free IATI files. 

        The publisher stats however, rely on the technical quality of the data I'd imagine. 

        <br /><br />

        Invalid data also has some major side effects for data users that cannot use your data or have to build workarounds to show your data correctly. 

        There are quite some data portals build upon partly faulty data. While it might be more effort to get the data changed, especially when its not your own data, its generally bad for the standard to be less strict about this. In the long run it could cause a lack of comparability and traceability.

      </div>
    )
  }
}

export default About;
